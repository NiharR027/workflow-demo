name: Release with Git Flow

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version number for the release"
        required: true
        default: "1.0.0"

jobs:
  create_release_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Set Git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Create release branch
        id: create_release_branch
        run: |
          release_branch="release-${{ github.event.inputs.version }}"
          echo "branch_name=$release_branch" >> $GITHUB_ENV
          git fetch --prune --unshallow
          if git ls-remote --heads origin $release_branch; then
            git checkout $release_branch
            git pull origin $release_branch
          else
            git checkout -b $release_branch
          fi

          current_version=$(node -p "require('./package.json').version")
          if [ "$current_version" != "${{ github.event.inputs.version }}" ]; then
            npm version ${{ github.event.inputs.version }} --no-git-tag-version
            git add package.json
            git commit -m "Bump version to ${{ github.event.inputs.version }}"
          else
            echo "Version not changed, skipping npm version"
          fi
          git push origin $release_branch

  create_pr_to_develop:
    needs: create_release_branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Set Git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Create Pull Request to develop
        id: pr-develop
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: develop
          branch: ${{ env.branch_name }}
          title: "Release ${{ github.event.inputs.version }} to develop"
          body: "Automated PR to merge release ${{ github.event.inputs.version }} into develop"
          commit-message: "[create-pull-request] automated change"
          committer: "GitHub <noreply@github.com>"
          author: "NiharR27 <NiharR27@users.noreply.github.com>"
          signoff: false
          delete-branch: false
          draft: false

  merge_to_master:
    needs: create_pr_to_develop
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Set Git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Pull latest changes from master
        run: git pull origin master

      - name: Create Pull Request to master
        id: pr-master
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: master
          branch: develop
          title: "Merge develop into master for release ${{ github.event.inputs.version }}"
          body: "Automated PR to merge develop into master after release ${{ github.event.inputs.version }}"
          commit-message: "[create-pull-request] automated change"
          committer: "GitHub <noreply@github.com>"
          author: "NiharR27 <NiharR27@users.noreply.github.com>"
          signoff: false
          delete-branch: false
          draft: false

  create_tag:
    needs: merge_to_master
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master
        uses: actions/checkout@v2
        with:
          ref: master
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Set Git config
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Create Tag
        run: |
          git tag -a v${{ github.event.inputs.version }} -m "Release ${{ github.event.inputs.version }}"
          git push origin v${{ github.event.inputs.version }}
