# name: "Publish new release 2"

# on:
#   pull_request:
#     branches:
#       - develop
#     types:
#       - closed

# jobs:
#   create-develop-to-master-pr:
#     name: "Create PR to merge develop into master"
#     runs-on: ubuntu-latest
#     if: github.event.pull_request.merged == true &&
#       startsWith(github.event.pull_request.head.ref, 'release/')
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Create PR
#         uses: thomaseizinger/create-pull-request@1.0.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           head: develop
#           base: master
#           title: Merge develop into master
#           body: |
#             This PR merges the develop branch back into master.

#   release:
#     name: Publish new release
#     runs-on: ubuntu-latest
#     if: github.event.pull_request.merged == true &&
#       github.event.pull_request.base.ref == 'master' &&
#       (startsWith(github.event.pull_request.head.ref, 'release/') || startsWith(github.event.pull_request.head.ref, 'hotfix/'))
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2

#       - name: Extract version from branch name (for release branches)
#         if: startsWith(github.event.pull_request.head.ref, 'release/')
#         run: |
#           BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
#           VERSION=${BRANCH_NAME#release/}
#           echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

#       - name: Extract version from branch name (for hotfix branches)
#         if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
#         run: |
#           BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
#           VERSION=${BRANCH_NAME#hotfix/}
#           echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

#       - name: Create Release
#         uses: thomaseizinger/create-release@1.0.0
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         with:
#           target_commitish: ${{ github.event.pull_request.merge_commit_sha }}
#           tag_name: ${{ env.RELEASE_VERSION }}
#           name: ${{ env.RELEASE_VERSION }}
#           draft: false
#           prerelease: false
